(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
let slideIndex = 3;
let num = 1;
let navOpened = false; 
let tl = new TimelineLite;
let thumbTL = new TimelineLite;
let lastImgNum;
let imgClick;

var files = ["1.gif","10.gif","2.gif","3.gif","4.gif","5 _ restaurant.png","5.gif","6 _ boxing ring.png","6.gif","7.gif","8 _ hotel.png","8.gif","8b.gif","9.gif","air_plane.gif","b6b4c040758545.578ca6c286154.gif","boxing.gif","char.jpg","dance.gif","hotel.gif","quanchung.gif","run.gif","waterparkCSsp.jpg","water_park.gif"];

lastImgNum = files.length;
console.log(files);


showSlides(slideIndex);
document.getElementById("prev").addEventListener("click", function(){plusSlides(-1)}, false);
document.getElementById("next").addEventListener("click", function(){plusSlides(1)}, false);
document.getElementById("nav-open").addEventListener("click", function(){navOpen()},false);

for (i = 1; i < 6; i++) {
    document.getElementById("slot0" + i.toString()).addEventListener("click", function(){onImgClick(this)}, false);
}

function onImgClick(element) {
    let n = element.id.slice(-1);
    let thumbImg =  document.getElementsByClassName("small_img");
    let imgNum = (thumbImg[n-1].src.slice(-5)).charAt(0);
    thumbImg[2].src = thumbImg[n-1].src;
    plusSlides(n-3);
}

function onClickComplete() {
    thumbTL.pause(0);
    thumbTL.kill();
}

function navOpen(){
    let navEle = document.getElementsByClassName("nav-list");
    let navLink = document.getElementsByClassName("nav-links");
    if (navOpened == false){
        document.getElementById("sdNav").style.height = "100%";
        for (i = 0; i < navEle.length; i++) {
            navEle[i].style.top = "25vh";
            for (i = 1; i < navLink.length; i++){
                navLink[i].style.display = "block";
                tl.progress(0);
                tl.to(navLink[i], {duration: 0.5, opacity: 1}, "-=0.4");
            }
        }
        navOpened = true;
    } else {
        document.getElementById("sdNav").style.height = "40px";
        for (i = 0; i < navEle.length; i++) {
            navEle[i].style.top = "0vh";
            for (i = 1; i < navLink.length; i++){
                navLink[i].style.display = "none";
                navLink[i].style.opacity = "0";
            }
        }
        navOpened = false;
    }
}

function plusSlides(n) {
    slideIndex = slideIndex += n;
    if (slideIndex <= 0) {
        slideIndex = lastImgNum;
    }
    if (slideIndex > lastImgNum) {
        slideIndex = 1;
    }
    num += n;
    if (num > lastImgNum && n > 1) {
        num = n;
    } else if (num > lastImgNum) {
        num = 1
    }
    if (num < 1 && n < -1) {
        num = lastImgNum + (n + 1);
        console.log(n);
    } else if (num < 1) {
        num = lastImgNum;
    }
    showSlides(slideIndex, num);
}

function currentSlide(n) {
    num = n;
    showSlides(slideIndex = n, num);
}

function showSlides(n) {
    let i;
    let order;
    let imgSrc = document.getElementById("actual_img");
    let dots = document.getElementsByClassName("small_img");
    for (i = 0; i < dots.length; i++) {
        dots[i].className = dots[i].className.replace(" active", "");
        order = i + num;
        if (order > lastImgNum) {
            order = order - lastImgNum;
        }
        dots[i].src = "./images/" + files[order-1].toString();
        console.log(order-1);
        console.log(files[10]);
    }
    imgSrc.src = dots[2].src;
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6L1VzZXJzL3VzZXIvQXBwRGF0YS9Sb2FtaW5nL25wbS9ub2RlX21vZHVsZXMvd2F0Y2hpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIkY6L0xBTS93ZWJzaXRlL0dpdEh1Yi9TdW5kb2ctU3R1ZGlvLVdlYnNpdGUvanMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxJQUFJLGFBQWEsQ0FBQyxDQUFDO0FBQ25CLElBQUksTUFBTSxDQUFDLENBQUM7QUFDWixJQUFJLFlBQVksS0FBSyxDQUFDO0FBQ3RCLElBQUksS0FBSyxJQUFJLFlBQVksQ0FBQztBQUMxQixJQUFJLFVBQVUsSUFBSSxZQUFZLENBQUM7QUFDL0IsSUFBSSxVQUFVLENBQUM7QUFDZixJQUFJLFFBQVEsQ0FBQztBQUNiLEFBQXVCO0FBQ3ZCLElBQUksUUFBUSx3VEFBMkIsQ0FBQzs7QUFFeEMsYUFBYSxLQUFLLE9BQU8sQ0FBQztBQUMxQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzs7O0FBR25CLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN2QixRQUFRLGVBQWUsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQzdGLFFBQVEsZUFBZSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQzVGLFFBQVEsZUFBZSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRTNGLEtBQUssSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFB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QUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDMUI7SUFDRCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztDQUM1QiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImxldCBzbGlkZUluZGV4ID0gMztcclxubGV0IG51bSA9IDE7XHJcbmxldCBuYXZPcGVuZWQgPSBmYWxzZTsgXHJcbmxldCB0bCA9IG5ldyBUaW1lbGluZUxpdGU7XHJcbmxldCB0aHVtYlRMID0gbmV3IFRpbWVsaW5lTGl0ZTtcclxubGV0IGxhc3RJbWdOdW07XHJcbmxldCBpbWdDbGljaztcclxudmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcclxudmFyIGZpbGVzID0gZnMucmVhZGRpclN5bmMoJy4vaW1hZ2VzLycpO1xyXG5cclxubGFzdEltZ051bSA9IGZpbGVzLmxlbmd0aDtcclxuY29uc29sZS5sb2coZmlsZXMpO1xyXG5cclxuXHJcbnNob3dTbGlkZXMoc2xpZGVJbmRleCk7XHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJldlwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtwbHVzU2xpZGVzKC0xKX0sIGZhbHNlKTtcclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXh0XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe3BsdXNTbGlkZXMoMSl9LCBmYWxzZSk7XHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmF2LW9wZW5cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCl7bmF2T3BlbigpfSxmYWxzZSk7XHJcblxyXG5mb3IgKGkgPSAxOyBpIDwgNjsgaSsrKSB7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNsb3QwXCIgKyBpLnRvU3RyaW5nKCkpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe29uSW1nQ2xpY2sodGhpcyl9LCBmYWxzZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9uSW1nQ2xpY2soZWxlbWVudCkge1xyXG4gICAgbGV0IG4gPSBlbGVtZW50LmlkLnNsaWNlKC0xKTtcclxuICAgIGxldCB0aHVtYkltZyA9ICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic21hbGxfaW1nXCIpO1xyXG4gICAgbGV0IGltZ051bSA9ICh0aHVtYkltZ1tuLTFdLnNyYy5zbGljZSgtNSkpLmNoYXJBdCgwKTtcclxuICAgIHRodW1iSW1nWzJdLnNyYyA9IHRodW1iSW1nW24tMV0uc3JjO1xyXG4gICAgcGx1c1NsaWRlcyhuLTMpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBvbkNsaWNrQ29tcGxldGUoKSB7XHJcbiAgICB0aHVtYlRMLnBhdXNlKDApO1xyXG4gICAgdGh1bWJUTC5raWxsKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5hdk9wZW4oKXtcclxuICAgIGxldCBuYXZFbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibmF2LWxpc3RcIik7XHJcbiAgICBsZXQgbmF2TGluayA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJuYXYtbGlua3NcIik7XHJcbiAgICBpZiAobmF2T3BlbmVkID09IGZhbHNlKXtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNkTmF2XCIpLnN0eWxlLmhlaWdodCA9IFwiMTAwJVwiO1xyXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBuYXZFbGUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbmF2RWxlW2ldLnN0eWxlLnRvcCA9IFwiMjV2aFwiO1xyXG4gICAgICAgICAgICBmb3IgKGkgPSAxOyBpIDwgbmF2TGluay5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBuYXZMaW5rW2ldLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgICAgICAgICB0bC5wcm9ncmVzcygwKTtcclxuICAgICAgICAgICAgICAgIHRsLnRvKG5hdkxpbmtbaV0sIHtkdXJhdGlvbjogMC41LCBvcGFjaXR5OiAxfSwgXCItPTAuNFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBuYXZPcGVuZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNkTmF2XCIpLnN0eWxlLmhlaWdodCA9IFwiNDBweFwiO1xyXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBuYXZFbGUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbmF2RWxlW2ldLnN0eWxlLnRvcCA9IFwiMHZoXCI7XHJcbiAgICAgICAgICAgIGZvciAoaSA9IDE7IGkgPCBuYXZMaW5rLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIG5hdkxpbmtbaV0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgICAgICAgICAgbmF2TGlua1tpXS5zdHlsZS5vcGFjaXR5ID0gXCIwXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbmF2T3BlbmVkID0gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHBsdXNTbGlkZXMobikge1xyXG4gICAgc2xpZGVJbmRleCA9IHNsaWRlSW5kZXggKz0gbjtcclxuICAgIGlmIChzbGlkZUluZGV4IDw9IDApIHtcclxuICAgICAgICBzbGlkZUluZGV4ID0gbGFzdEltZ051bTtcclxuICAgIH1cclxuICAgIGlmIChzbGlkZUluZGV4ID4gbGFzdEltZ051bSkge1xyXG4gICAgICAgIHNsaWRlSW5kZXggPSAxO1xyXG4gICAgfVxyXG4gICAgbnVtICs9IG47XHJcbiAgICBpZiAobnVtID4gbGFzdEltZ051bSAmJiBuID4gMSkge1xyXG4gICAgICAgIG51bSA9IG47XHJcbiAgICB9IGVsc2UgaWYgKG51bSA+IGxhc3RJbWdOdW0pIHtcclxuICAgICAgICBudW0gPSAxXHJcbiAgICB9XHJcbiAgICBpZiAobnVtIDwgMSAmJiBuIDwgLTEpIHtcclxuICAgICAgICBudW0gPSBsYXN0SW1nTnVtICsgKG4gKyAxKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhuKTtcclxuICAgIH0gZWxzZSBpZiAobnVtIDwgMSkge1xyXG4gICAgICAgIG51bSA9IGxhc3RJbWdOdW07XHJcbiAgICB9XHJcbiAgICBzaG93U2xpZGVzKHNsaWRlSW5kZXgsIG51bSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGN1cnJlbnRTbGlkZShuKSB7XHJcbiAgICBudW0gPSBuO1xyXG4gICAgc2hvd1NsaWRlcyhzbGlkZUluZGV4ID0gbiwgbnVtKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd1NsaWRlcyhuKSB7XHJcbiAgICBsZXQgaTtcclxuICAgIGxldCBvcmRlcjtcclxuICAgIGxldCBpbWdTcmMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjdHVhbF9pbWdcIik7XHJcbiAgICBsZXQgZG90cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzbWFsbF9pbWdcIik7XHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgZG90cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGRvdHNbaV0uY2xhc3NOYW1lID0gZG90c1tpXS5jbGFzc05hbWUucmVwbGFjZShcIiBhY3RpdmVcIiwgXCJcIik7XHJcbiAgICAgICAgb3JkZXIgPSBpICsgbnVtO1xyXG4gICAgICAgIGlmIChvcmRlciA+IGxhc3RJbWdOdW0pIHtcclxuICAgICAgICAgICAgb3JkZXIgPSBvcmRlciAtIGxhc3RJbWdOdW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRvdHNbaV0uc3JjID0gXCIuL2ltYWdlcy9cIiArIGZpbGVzW29yZGVyLTFdLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2cob3JkZXItMSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coZmlsZXNbMTBdKTtcclxuICAgIH1cclxuICAgIGltZ1NyYy5zcmMgPSBkb3RzWzJdLnNyYztcclxufVxyXG4iXX0=
